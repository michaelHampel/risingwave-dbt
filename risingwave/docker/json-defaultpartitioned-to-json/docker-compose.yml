---
services:
  connect:
    image: confluentinc/cp-kafka-connect-base:latest
    depends_on:
        - redpanda-0
    networks:
      - redpanda_network
    hostname: connect
    container_name: connect
    ports:
      - 8083:8083
    environment:
      - CONNECT_BOOTSTRAP_SERVERS=redpanda-0:19092
      - CONNECT_REST_ADVERTISED_HOST_NAME=connect
      - CONNECT_REST_PORT= 8083
      - CONNECT_GROUP_ID= connect-cluster-group
      - CONNECT_CONFIG_STORAGE_TOPIC= _kafka-connect-configs
      - CONNECT_OFFSET_STORAGE_TOPIC= _kafka-connect-offsets
      - CONNECT_STATUS_STORAGE_TOPIC= _kafka-connect-status
      - CONNECT_KEY_CONVERTER=org.apache.kafka.connect.storage.StringConverter
      - CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL=http://karapace-registry:8085
      - CONNECT_VALUE_CONVERTER=io.confluent.connect.json.JsonSchemaConverter
      - CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL=http://karapace-registry:8085
      - CONNECT_INTERNAL_KEY_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - CONNECT_INTERNAL_VALUE_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - CONNECT_LOG4J_ROOT_LOGLEVEL=INFO
      - CONNECT_LOG4J_LOGGERS=org.apache.kafka.connect.runtime.rest=WARN,org.reflections=ERROR
      - CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR=1
      - CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR=1
      - CONNECT_STATUS_STORAGE_REPLICATION_FACTOR=1
      - CONNECT_PLUGIN_PATH=/usr/share/java,/usr/share/confluent-hub-components/,/connectors/

      - AWS_ACCESS_KEY_ID=${MINIO_ACCESS_KEY}
      - AWS_SECRET_ACCESS_KEY=${MINIO_SECRET_KEY}
    command: 
      - bash 
      - -c 
      - |
        #
        echo "Installing connector plugins"
        confluent-hub install --no-prompt confluentinc/kafka-connect-s3:latest
        #
        echo "Launching Kafka Connect worker"
        /etc/confluent/docker/run & 
        #
        echo "Waiting for Kafka Connect to start listening on localhost ‚è≥"
        while : ; do
          curl_status=$$(curl -s -o /dev/null -w %{http_code} http://localhost:8083/connectors)
          echo -e $$(date) " Kafka Connect listener HTTP state: " $$curl_status " (waiting for 200)"
          if [ $$curl_status -eq 200 ] ; then
            break
          fi
          sleep 5 
        done
        curl -X PUT \
        -H 'Content-Type: application/json' \
        -H 'Accept: application/json' http://localhost:8083/connectors/S3SinkConnector/config \
        -d '{
        "connector.class": "io.confluent.connect.s3.S3SinkConnector",
        "storage.class": "io.confluent.connect.s3.storage.S3Storage",
        "s3.region": "eu-west-1",
        "s3.bucket.name": "enox-bucket",
        "flush.size": "150",
        "schema.compatibility": "NONE",
        "tasks.max": "1",
        "topics": "smartMeter-incoming",
        "store.url": "http://minio-0:9301",
        "key.converter.schemas.enable": "false",
        "key.converter": "org.apache.kafka.connect.storage.StringConverter",
        "format.class": "io.confluent.connect.s3.format.json.JsonFormat",
        "partitioner.class": "io.confluent.connect.storage.partitioner.DefaultPartitioner",
        "value.converter.schemas.enable": "false",
        "value.converter": "io.confluent.connect.json.JsonSchemaConverter",
        "value.converter.schema.registry.url": "http://karapace-registry:8085"
        }'
        sleep infinity