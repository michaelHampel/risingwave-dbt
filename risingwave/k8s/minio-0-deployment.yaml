apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose -f docker-compose.yml -f json-defaultpartitioned-to-json/docker-compose.yml convert
    kompose.version: 1.34.0 (HEAD)
  labels:
    io.kompose.service: minio-0
  name: minio-0
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: minio-0
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose -f docker-compose.yml -f json-defaultpartitioned-to-json/docker-compose.yml convert
        kompose.version: 1.34.0 (HEAD)
      labels:
        io.kompose.service: minio-0
    spec:
      containers:
        - args:
            - server
            - --address
            - 0.0.0.0:9301
            - --console-address
            - 0.0.0.0:9400
            - /data
          env:
            - name: MINIO_CI_CD
              value: "1"
            - name: MINIO_DOMAIN
              value: minio-0
            - name: MINIO_PROMETHEUS_AUTH_TYPE
              value: public
            - name: MINIO_PROMETHEUS_URL
              value: http://prometheus-0:9500
            - name: MINIO_ROOT_PASSWORD
            - name: MINIO_ROOT_USER
          image: quay.io/minio/minio:latest
          livenessProbe:
            exec:
              command:
                - bash -c 'printf \"GET / HTTP/1.1\n\n\" > /dev/tcp/127.0.0.1/9301; exit $?;'
            failureThreshold: 5
            periodSeconds: 1
            timeoutSeconds: 5
          name: minio-0
          ports:
            - containerPort: 9301
              protocol: TCP
            - containerPort: 9400
              protocol: TCP
          volumeMounts:
            - mountPath: /data
              name: minio-0
      restartPolicy: Always
      volumes:
        - name: minio-0
          persistentVolumeClaim:
            claimName: minio-0
