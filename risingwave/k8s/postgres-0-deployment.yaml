apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose -f docker-compose.yml -f json-defaultpartitioned-to-json/docker-compose.yml convert
    kompose.version: 1.34.0 (HEAD)
  labels:
    io.kompose.service: postgres-0
  name: postgres-0
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgres-0
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose -f docker-compose.yml -f json-defaultpartitioned-to-json/docker-compose.yml convert
        kompose.version: 1.34.0 (HEAD)
      labels:
        io.kompose.service: postgres-0
    spec:
      containers:
        - args:
            - postgres
            - -c
            - wal_level=logical
          env:
            - name: POSTGRES_DB
              value: metadata
            - name: POSTGRES_HOST_AUTH_METHOD
              value: trust
            - name: POSTGRES_INITDB_ARGS
              value: --encoding=UTF-8 --lc-collate=C --lc-ctype=C
            - name: POSTGRES_USER
              value: postgres
          image: postgres:15-alpine
          livenessProbe:
            exec:
              command:
                - pg_isready -U postgres
            failureThreshold: 5
            periodSeconds: 2
            timeoutSeconds: 5
          name: postgres-0
          ports:
            - containerPort: 5432
              protocol: TCP
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-0
      restartPolicy: Always
      volumes:
        - name: postgres-0
          persistentVolumeClaim:
            claimName: postgres-0
